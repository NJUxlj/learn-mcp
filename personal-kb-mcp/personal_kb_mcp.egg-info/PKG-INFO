Metadata-Version: 2.4
Name: personal-kb-mcp
Version: 0.1.0
Summary: A personal knowledge base with MCP integration for Zhipu AI
Author-email: Your Name <your.email@example.com>
License: MIT
Requires-Python: >=3.10
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: httpx>=0.28.1
Requires-Dist: python-dotenv>=1.1.0
Requires-Dist: openai>=1.76.0
Requires-Dist: pydantic>=2.5.0
Requires-Dist: mcp>=1.6.0
Requires-Dist: fastmcp>=0.4.0
Requires-Dist: SQLAlchemy>=2.0.0
Requires-Dist: rich>=13.5.0
Requires-Dist: typer>=0.9.0
Requires-Dist: requests>=2.28.0
Requires-Dist: zhipuai>=2.1.5
Requires-Dist: prompt-toolkit>=3.0.0
Dynamic: license-file

# PersonalKB: 智谱AI增强的个人知识库  

一个与智谱AI集成的个人知识库系统。本项目允许您使用智谱的大语言模型直接与您的知识库进行交互，帮助您管理和检索个人笔记和信息。  

## 功能特点  

- 创建、读取、更新和删除笔记  
- 标签系统用于组织  
- 全文搜索功能  
- 智谱AI模型集成  
- 使用SQLite数据库实现简单性和可移植性  
- 交互式命令行界面  

## 安装  

```bash  
# 从源代码安装  
git clone https://github.com/yourusername/personal-kb-mcp.git  
cd personal-kb-mcp 

# 安装项目及其依赖  
pip install -e .  

# 激活虚拟环境
source .venv/bin/activate 【Linux】
./.venv/Scripts/activate 【Windows】

# 激活行会在命令行最前面显示 (personal-kb-mcp)

# 初始化数据库（创建示例笔记）  
personalkb init  

```


使用方法
设置API密钥
在使用智谱API之前，需要设置API密钥：

```bash
export ZHIPU_API_KEY="your_api_key_here"  
```
或者您可以在运行命令时通过参数传递密钥。

启动交互式聊天界面
```bash
personalkb-chat  
```
或者指定模型：

```bash
personalkb-chat --model glm-4  
```

使用命令行工具管理知识库
```bash
# 显示知识库统计信息  
personalkb-cli stats  

# 列出所有笔记  
personalkb-cli list-notes  

# 添加新笔记（会打开编辑器）  
personalkb-cli add --title "我的新笔记" --tags "测试,笔记,示例"  

# 搜索笔记  
personalkb-cli search "关键词"  

# 显示笔记详情  
personalkb-cli show 1  

# 编辑笔记内容  
personalkb-cli edit 1 --edit-content  

# 列出所有标签  
personalkb-cli tags  
```

启动MCP服务器
```bash
# 启动MCP服务器  
personalkb run  
```


在您自己的Python代码中使用
```python
from personal_kb.zhipu_client import ZhipuClient  

# 创建客户端  
client = ZhipuClient(api_key="your_api_key_here")  

# 启动对话  
response = client.chat([  
{"role": "user", "content": "创建一个关于Python的新笔记"}  
])  

print(response)  
```

对话示例
您可以在交互式聊天界面中尝试以下命令：

"创建一个关于机器学习基础的新笔记"
"搜索我的知识库中的食谱"
"列出我的知识库中的所有标签"
"显示与Python相关的笔记"
"更新我的关于园艺的笔记，加入关于番茄的信息"


## 开发说明
本项目使用Model Context Protocol (MCP)作为底层技术，允许智谱AI模型与知识库交互。项目结构：

server.py: MCP服务器实现
database.py: 数据库操作
zhipu_client.py: 智谱API客户端
chat_app.py: 交互式命令行应用


## 许可证
MIT


